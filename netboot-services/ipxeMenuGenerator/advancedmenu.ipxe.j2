#!ipxe

:start

:advanced_menu
clear menu
set sp:hex 20 && set sp ${sp:string}
menu DG-Cloudboot-Backend
item --gap Standard:
item reboot ${sp} Netboot neu versuchen -> Neustart
item --gap Production:
{% for file in prod %}
item thinclient-{{ file.imageName }} ${sp} {{ file.imageName }}
{% endfor %}
item --gap Development:
{% for file in dev %}
item thinclient-{{ file.imageName }} ${sp} {{ file.imageName }}
{% endfor %}
item --gap Cachingserver:
item thinclient-netboot-caching-server.squashfs ${sp} netboot-caching-server
item --gap Tools:
item reset_windows ${sp} Notebook Wipe
item public-netbootxyz ${sp} Public netboot.xyz ||
item shell ${sp} iPXE shell
item netinfo ${sp} Netzwerkinfo
item --gap Aktuell gesetzter Bootserver: ${next-server}
item --gap Aktuell gesetzte Sprache: ${language}
choose --timeout 10000 advanced_choice || goto start
goto ${advanced_choice} ||

:error
echo Error occured, press any key to return to menu ...
prompt
goto advanced_menu

:netinfo
chain tftp://{{ netbootServerIP }}/netinfo.ipxe
goto advanced_menu

:reboot
echo Rebooting...
reboot

:reset_windows
kernel https://thinclients.blob.core.windows.net/win/reset/wimboot
initrd https://thinclients.blob.core.windows.net/win/reset/winpeshl.ini   winpeshl.ini
initrd https://thinclients.blob.core.windows.net/win/reset/install.bat    install.bat
initrd https://thinclients.blob.core.windows.net/win/reset/bcd            BCD
initrd https://thinclients.blob.core.windows.net/win/reset/boot.sdi       boot.sdi
initrd https://thinclients.blob.core.windows.net/win/reset/boot.wim       boot.wim
boot || goto advanced_menu

:shell
echo Type "exit" to return to menu.
set menu advanced_menu
shell
goto advanced_menu

:public-netbootxyz
login || goto advanced_menu
iseq ${password} devinite || goto advanced_menu
chain http://boot.netboot.xyz/ipxe/netboot.xyz-snponly.efi


#####################
# Production-Images #
#####################

{% for file in prod %}
:thinclient-{{ file.imageName }}
set squash_url http://${next-server}/prod/{{ file.imageName }}.squashfs
set kernel_url http://${next-server}/kernels/{{ file.kernelVersion }}/
goto startboot
{% endfor %}


######################
# Development-Images #
######################

{% for file in dev %}
:thinclient-{{ file.imageName }}
set squash_url http://${next-server}/dev/{{ file.imageName }}.squashfs
set kernel_url http://${next-server}/kernels/{{ file.kernelVersion }}/
goto startboot-dev
{% endfor %}

######################
# Cachingserver-Images #
######################
:thinclient-netboot-caching-server.squashfs
set next-server {{ netbootServerIP }}
set squash_url http://${next-server}/caching-server/casper/netboot-caching-server.squashfs
set kernel_url http://${next-server}/kernels/5.11.0-16-generic/


:startboot
imgfree
kernel ${kernel_url}vmlinuz ip=dhcp boot=casper netboot=url url=${squash_url} initrd=initrd locale=${language} ${cmdline} quiet splash
initrd ${kernel_url}initrd
boot

:startboot-dev
imgfree
kernel ${kernel_url}vmlinuz ip=dhcp boot=casper netboot=url url=${squash_url} initrd=initrd locale=${language} ${cmdline}
initrd ${kernel_url}initrd
boot
